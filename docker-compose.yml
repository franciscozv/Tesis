# version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: tesis-postgres-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - tesis-db-data:/var/lib/postgresql/data
    networks:
      - tesis-red
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: tesis-backend-simple
    restart: unless-stopped
    command: sh -c "pnpm prisma migrate deploy && node dist/index.js"
    # --- Â¡CAMBIO CLAVE! ---
    # Hacemos que el puerto 8080 del contenedor sea accesible en el puerto 8080 de localhost.
    ports:
      - "8080:8080"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public
      - PORT=${PORT}
      - CORS_ORIGIN=${CORS_ORIGIN}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - tesis-red

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_CLIENTVAR: ${NEXT_PUBLIC_API_URL}
    container_name: tesis-frontend-simple
    restart: unless-stopped
    ports:
      - "1709:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
      - NEXT_PUBLIC_CLIENTVAR=${NEXT_PUBLIC_API_URL}
    depends_on:
      - backend
    networks:
      - tesis-red

networks:
  tesis-red:
    driver: bridge

volumes:
  tesis-db-data:
    driver: local
